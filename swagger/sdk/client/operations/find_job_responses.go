// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-job/swagger/sdk/models"
)

// FindJobReader is a Reader for the FindJob structure.
type FindJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewFindJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFindJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewFindJobUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFindJobOK creates a FindJobOK with default headers values
func NewFindJobOK() *FindJobOK {
	return &FindJobOK{}
}

/* FindJobOK describes a response with status code 200, with default header values.

FindJobOK find job o k
*/
type FindJobOK struct {
	Payload *models.Job
}

func (o *FindJobOK) Error() string {
	return fmt.Sprintf("[GET /jobs/{id}][%d] findJobOK  %+v", 200, o.Payload)
}
func (o *FindJobOK) GetPayload() *models.Job {
	return o.Payload
}

func (o *FindJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Job)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindJobUnauthorized creates a FindJobUnauthorized with default headers values
func NewFindJobUnauthorized() *FindJobUnauthorized {
	return &FindJobUnauthorized{}
}

/* FindJobUnauthorized describes a response with status code 401, with default header values.

FindJobUnauthorized find job unauthorized
*/
type FindJobUnauthorized struct {
}

func (o *FindJobUnauthorized) Error() string {
	return fmt.Sprintf("[GET /jobs/{id}][%d] findJobUnauthorized ", 401)
}

func (o *FindJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindJobForbidden creates a FindJobForbidden with default headers values
func NewFindJobForbidden() *FindJobForbidden {
	return &FindJobForbidden{}
}

/* FindJobForbidden describes a response with status code 403, with default header values.

FindJobForbidden find job forbidden
*/
type FindJobForbidden struct {
}

func (o *FindJobForbidden) Error() string {
	return fmt.Sprintf("[GET /jobs/{id}][%d] findJobForbidden ", 403)
}

func (o *FindJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFindJobUnsupportedMediaType creates a FindJobUnsupportedMediaType with default headers values
func NewFindJobUnsupportedMediaType() *FindJobUnsupportedMediaType {
	return &FindJobUnsupportedMediaType{}
}

/* FindJobUnsupportedMediaType describes a response with status code 415, with default header values.

FindJobUnsupportedMediaType find job unsupported media type
*/
type FindJobUnsupportedMediaType struct {
}

func (o *FindJobUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /jobs/{id}][%d] findJobUnsupportedMediaType ", 415)
}

func (o *FindJobUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
